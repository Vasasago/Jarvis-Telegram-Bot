import configparser

from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton
import os

import logger

commands_btns = []
commands = {}

config = configparser.ConfigParser()  # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥–∞


def open_commands():
    def get_folder_names(directory):
        try:
            folders = [folder for folder in os.listdir(directory) if os.path.isdir(os.path.join(directory, folder))]
            return folders

        except Exception as e:
            logger.logging_func(e)

    config.read('config.ini')
    folder_path = config.get('tg-bot', 'commands_folder')
    folders = get_folder_names(folder_path)

    if folders:

        folder_btns = [InlineKeyboardButton(f'{folder}', callback_data=f'folder:{folder}') for folder in folders]

    else:
        folder_btns = []

    commands_btns.clear()

    for btn in folder_btns:
        commands_btns.append(btn)

    inline_folders = InlineKeyboardMarkup(row_width=2).add(*commands_btns)

    return inline_folders


def open_folder(folder_name):
    def get_exe_files(directory):
        try:
            exe_files = [file for file in os.listdir(directory) if file.endswith('.exe')]
            return exe_files

        except Exception as e:
            logger.logging_func(e)

    config.read('config.ini')
    folder_path = config.get('tg-bot', 'commands_folder')

    folder_path = os.path.join(folder_path, folder_name)
    subfolder_path = os.path.join(folder_path, 'ahk')
    exe_files = get_exe_files(subfolder_path)

    if exe_files:
        exe_btns = [InlineKeyboardButton(file, callback_data=f'file:{file}') for file in exe_files]

    else:
        exe_btns = []

    commands_btns.clear()

    for btn in exe_btns:
        commands_btns.append(btn)

    inline_files = InlineKeyboardMarkup(row_width=2).add(*commands_btns)

    return inline_files


f = [InlineKeyboardButton('‚â° F1 ‚â°', callback_data='f1'), InlineKeyboardButton('‚â° F2 ‚â°', callback_data='f2'),
     InlineKeyboardButton('‚â° F3 ‚â°', callback_data='f3'), InlineKeyboardButton('‚â° F4 ‚â°', callback_data='f4'),
     InlineKeyboardButton('‚â° F5 ‚â°', callback_data='f5'), InlineKeyboardButton('‚â° F6 ‚â°', callback_data='f6'),
     InlineKeyboardButton('‚â° F7 ‚â°', callback_data='f7'), InlineKeyboardButton('‚â° F8 ‚â°', callback_data='f8'),
     InlineKeyboardButton('‚â° F9 ‚â°', callback_data='f9'), InlineKeyboardButton('‚â° F10 ‚â°', callback_data='f10'),
     InlineKeyboardButton('‚â° F11 ‚â°', callback_data='f11'), InlineKeyboardButton('‚â° F12 ‚â°', callback_data='f12')]

keys = [InlineKeyboardButton('Space', callback_data='space'),
        InlineKeyboardButton('Enter', callback_data='enter'),
        InlineKeyboardButton('Esc', callback_data='esc'),
        InlineKeyboardButton('Windows', callback_data='win'),
        InlineKeyboardButton('Backspace', callback_data='backspace'),
        InlineKeyboardButton('Shift', callback_data='shift'),
        InlineKeyboardButton('Ctrl', callback_data='ctrl'),
        InlineKeyboardButton('Alt', callback_data='alt'),
        InlineKeyboardButton('Left', callback_data='left'),
        InlineKeyboardButton('Right', callback_data='right'),
        InlineKeyboardButton('Up', callback_data='up'),
        InlineKeyboardButton('Down', callback_data='down')]

keyboard_inline = InlineKeyboardMarkup(row_width=4).add(*f, *keys)

main_btns = [KeyboardButton('ü§ñ –ö–æ–º–∞–Ω–¥—ã Jarvis'),
             KeyboardButton('‚å® –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞'),
             KeyboardButton('üìÇ –ü—Ä–æ–≤–æ–¥–Ω–∏–∫'),
             KeyboardButton('üñ• –ü—Ä–æ–≥—Ä–∞–º–º—ã'),
             KeyboardButton('üõ† –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–æ–º')]

main_inline = ReplyKeyboardMarkup(resize_keyboard=True).add(*main_btns)

service_btns = [InlineKeyboardButton('üñ• –ó–∞–ø—É—Å—Ç–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ Jarvis', callback_data='start_voice_jarvis'),
                InlineKeyboardButton('üì¥ –í—ã–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞', callback_data='off'),
                InlineKeyboardButton('‚ôª –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –±–æ—Ç–∞', callback_data='reboot'),
                InlineKeyboardButton('üìÇ –û—Ç–∫—Ä—ã—Ç—å –ø–∞–ø–∫—É —Å –±–æ—Ç–æ–º', callback_data='bot_path'),
                InlineKeyboardButton('‚¨á –°–∫–∞—á–∞—Ç—å –ª–æ–≥', callback_data='log')]

service_markup = InlineKeyboardMarkup(row_width=1).add(*service_btns)

voice_speakers = [InlineKeyboardButton('üë®‚Äçü¶± ‚Äç–ê–π–¥–∞—Ä', callback_data='voice-0'),
                  InlineKeyboardButton('üßë –ë–∞–π—è', callback_data='voice-1'),
                  InlineKeyboardButton('üë© –ö—Å–µ–Ω–∏—è 1', callback_data='voice-2'),
                  InlineKeyboardButton('üë©‚Äçü¶∞ –ö—Å–µ–Ω–∏—è 2', callback_data='voice-3'),
                  InlineKeyboardButton('üë®‚Äçü¶∞ –ï–≤–≥–µ–Ω–∏–π', callback_data='voice-4')]

voice_markup = InlineKeyboardMarkup(row_width=1).add(*voice_speakers)

audio_speakers = [InlineKeyboardButton('üë®‚Äçü¶± ‚Äç–ê–π–¥–∞—Ä', callback_data='audio-0'),
                  InlineKeyboardButton('üßë –ë–∞–π—è', callback_data='audio-1'),
                  InlineKeyboardButton('üë© –ö—Å–µ–Ω–∏—è 1', callback_data='audio-2'),
                  InlineKeyboardButton('üë©‚Äçü¶∞ –ö—Å–µ–Ω–∏—è 2', callback_data='audio-3'),
                  InlineKeyboardButton('üë®‚Äçü¶∞ –ï–≤–≥–µ–Ω–∏–π', callback_data='audio-4')]

audio_markup = InlineKeyboardMarkup(row_width=1).add(*audio_speakers)

languages = [InlineKeyboardButton('üá∑üá∫ –†—É—Å—Å–∫–∏–π', callback_data='RU-ru'),
             InlineKeyboardButton('üá∫üá¶ –£–∫—Ä–∞–∏–Ω—Å–∫–∏–π', callback_data='UK-uk'),
             InlineKeyboardButton('üá∫üá∏ –ê–Ω–≥–ª–∏–π—Å–∫–∏–π', callback_data='EN-en')]

langs_markup = InlineKeyboardMarkup(row_width=1).add(*languages)

script_file_btns = [InlineKeyboardButton('üñ• –ó–∞–ø—É—Å—Ç–∏—Ç—å', callback_data='run'),
                    InlineKeyboardButton('üì≤ –°–∫–∞—á–∞—Ç—å', callback_data='download'),
                    InlineKeyboardButton('üóë –£–¥–∞–ª–∏—Ç—å', callback_data='delete'),
                    InlineKeyboardButton('‚óÄ –ù–∞–∑–∞–¥', callback_data='back_explorer')]

script_file_markup = InlineKeyboardMarkup(row_width=1).add(*script_file_btns)


open_lnk_btn = InlineKeyboardButton('üìÇ –û—Ç–∫—Ä—ã—Ç—å –ø–∞–ø–∫—É', callback_data='open_lnk')

open_lnk_markup = InlineKeyboardMarkup(row_width=1).add(open_lnk_btn)
